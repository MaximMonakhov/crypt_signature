import 'dart:convert';

import 'package:crypt_signature/crypt_signature.dart';
import 'package:flutter_test/flutter_test.dart';

void main() {
  const String cryptoProAlias = "qwerty";
  const String cryptoProRawCertificate =
      "MIIDczCCAyKgAwIBAgITEgBgwteSYfum6FWXfAABAGDC1zAIBgYqhQMCAgMwfzEjMCEGCSqGSIb3DQEJARYUc3VwcG9ydEBjcnlwdG9wcm8ucnUxCzAJBgNVBAYTAlJVMQ8wDQYDVQQHEwZNb3Njb3cxFzAVBgNVBAoTDkNSWVBUTy1QUk8gTExDMSEwHwYDVQQDExhDUllQVE8tUFJPIFRlc3QgQ2VudGVyIDIwHhcNMjIxMjIxMTA0NzA1WhcNMjMwMzIxMTA1NzA1WjB5MRUwEwYJKoZIhvcNAQkBFgZxd2VydHkxDzANBgNVBAMMBnF3ZXJ0eTEPMA0GA1UECwwGcXdlcnR5MQ8wDQYDVQQKDAZxd2VydHkxDzANBgNVBAcMBnF3ZXJ0eTEPMA0GA1UECAwGcXdlcnR5MQswCQYDVQQGEwJSVTBmMB8GCCqFAwcBAQEBMBMGByqFAwICJAAGCCqFAwcBAQICA0MABECxGEagxV8Q5ZJQLcjI/giTAmng2EBWFF94x6TkxC6Rk/dLkyhon3ykgCh6TeugIozti4aWzS5ytWdC8rK3psobo4IBdjCCAXIwDgYDVR0PAQH/BAQDAgTwMBMGA1UdJQQMMAoGCCsGAQUFBwMCMB0GA1UdDgQWBBS+FM75aN9Ap02nltPA8Neh9xhxFjAfBgNVHSMEGDAWgBROgz4Uae/sXXqVK18R/jcyFklVKzBcBgNVHR8EVTBTMFGgT6BNhktodHRwOi8vdGVzdGNhLmNyeXB0b3Byby5ydS9DZXJ0RW5yb2xsL0NSWVBUTy1QUk8lMjBUZXN0JTIwQ2VudGVyJTIwMigxKS5jcmwwgawGCCsGAQUFBwEBBIGfMIGcMGQGCCsGAQUFBzAChlhodHRwOi8vdGVzdGNhLmNyeXB0b3Byby5ydS9DZXJ0RW5yb2xsL3Rlc3QtY2EtMjAxNF9DUllQVE8tUFJPJTIwVGVzdCUyMENlbnRlciUyMDIoMSkuY3J0MDQGCCsGAQUFBzABhihodHRwOi8vdGVzdGNhLmNyeXB0b3Byby5ydS9vY3NwL29jc3Auc3JmMAgGBiqFAwICAwNBABq7fVu9DmqjW59Jo2rlikm+U1ID2avp0Ogj+QLPc+q5nxm8TdOWidnWOsZBCRLMHqnUvS5YamaDM1LtwKJ5xAg=";
  const String cryptoProParameters =
      "eyJ2YWxpZEZyb21EYXRlIjoiMjAyMi0xMi0yMSAxMDo0NzowNS4wMDBaIiwidmFsaWRUb0RhdGUiOiIyMDIzLTAzLTIxIDEwOjU3OjA1LjAwMFoiLCJpc3N1ZXIiOiJlbWFpbEFkZHJlc3M9c3VwcG9ydEBjcnlwdG9wcm8ucnUsIGNvdW50cnlOYW1lPVJVLCBsb2NhbGl0eU5hbWU9TW9zY293LCBvcmdhbml6YXRpb25OYW1lPUNSWVBUTy1QUk8gTExDLCBjb21tb25OYW1lPUNSWVBUTy1QUk8gVGVzdCBDZW50ZXIgMiIsInN1YmplY3QiOiJlbWFpbEFkZHJlc3M9cXdlcnR5LCBjb21tb25OYW1lPXF3ZXJ0eSwgb3JnYW5pemF0aW9uVW5pdE5hbWU9cXdlcnR5LCBvcmdhbml6YXRpb25OYW1lPXF3ZXJ0eSwgbG9jYWxpdHlOYW1lPXF3ZXJ0eSwgc3RhdGVPclByb3ZpbmNlTmFtZT1xd2VydHksIGNvdW50cnlOYW1lPVJVIiwic3ViamVjdEluZm8iOiJlbWFpbEFkZHJlc3M9cXdlcnR5LCBjb21tb25OYW1lPXF3ZXJ0eSwgb3JnYW5pemF0aW9uVW5pdE5hbWU9cXdlcnR5LCBvcmdhbml6YXRpb25OYW1lPXF3ZXJ0eSwgbG9jYWxpdHlOYW1lPXF3ZXJ0eSwgc3RhdGVPclByb3ZpbmNlTmFtZT1xd2VydHksIGNvdW50cnlOYW1lPVJVIiwiaXNzdWVySW5mbyI6ImVtYWlsQWRkcmVzcz1zdXBwb3J0QGNyeXB0b3Byby5ydSwgY291bnRyeU5hbWU9UlUsIGxvY2FsaXR5TmFtZT1Nb3Njb3csIG9yZ2FuaXphdGlvbk5hbWU9Q1JZUFRPLVBSTyBMTEMsIGNvbW1vbk5hbWU9Q1JZUFRPLVBSTyBUZXN0IENlbnRlciAyIiwic2VyaWFsTnVtYmVyIjoiMTIwMDYwYzJkNzkyNjFmYmE2ZTg1NTk3N2MwMDAxMDA2MGMyZDciLCJzaWduQWxnb3JpdG1bbmFtZV0iOiLQk9Ce0KHQoiDQoCAzNC4xMC0yMDEyIiwic2lnbkFsZ29yaXRtW29pZF0iOiIxLjIuNjQzLjcuMS4xLjMuMiIsImhhc2hBbGdvcml0bVthbGlhc10iOiIxLjIuNjQzLjcuMS4xLjIuMiJ9";
  const String cryptoProDescription =
      "0JLQu9Cw0LTQtdC70LXRhjogZW1haWxBZGRyZXNzPXF3ZXJ0eSwgY29tbW9uTmFtZT1xd2VydHksIG9yZ2FuaXphdGlvblVuaXROYW1lPXF3ZXJ0eSwgb3JnYW5pemF0aW9uTmFtZT1xd2VydHksIGxvY2FsaXR5TmFtZT1xd2VydHksIHN0YXRlT3JQcm92aW5jZU5hbWU9cXdlcnR5LCBjb3VudHJ5TmFtZT1SVQrQodC10YDQuNC50L3Ri9C5INC90L7QvNC10YA6IDEyMDA2MGMyZDc5MjYxZmJhNmU4NTU5NzdjMDAwMTAwNjBjMmQ3CtCY0LfQtNCw0YLQtdC70Yw6IGVtYWlsQWRkcmVzcz1zdXBwb3J0QGNyeXB0b3Byby5ydSwgY291bnRyeU5hbWU9UlUsIGxvY2FsaXR5TmFtZT1Nb3Njb3csIG9yZ2FuaXphdGlvbk5hbWU9Q1JZUFRPLVBSTyBMTEMsIGNvbW1vbk5hbWU9Q1JZUFRPLVBSTyBUZXN0IENlbnRlciAyCtCQ0LvQs9C+0YDQuNGC0Lwg0L/QvtC00L/QuNGB0Lg60JPQntCh0KIg0KAgMzQuMTAtMjAxMgrQlNC10LnRgdGC0LLRg9C10YIg0YE6IDIwMjItMTItMjEgMTA6NDc6MDUuMDAwWgrQlNC10LnRgdGC0LLRg9C10YIg0L/QvjogMjAyMy0wMy0yMSAxMDo1NzowNS4wMDBa";
  const String kristaCertificateAlias = 'ООО "НПО "Криста" тест';
  const String kristaRawCertificate =
      "MIIFXjCCBQugAwIBAgIRATpnjQDdrny9TEADyZTTLjYwCgYIKoUDBwEBAwIwgZMxGDAWBgUqhQNkARINMDAwMDAwMDAwMDAwMDEaMBgGCCqFAwOBAwEBEgwwMDAwMDAwMDAwMDAxCzAJBgNVBAYTAlJVMQ8wDQYDVQQIDAY3NiBZYXIxEDAOBgNVBAcMB1J5Ymluc2sxCzAJBgNVBAsMAkNBMQ8wDQYDVQQKDAZrcmlzdGExDTALBgNVBAMMBHJvb3QwHhcNMjIwNzI1MDgyNDUwWhcNMjMwNzI1MDgzNDUwWjCCAckxFTATBgUqhQNkBAwKNDY4OTU3NjgxMjEbMBkGCSqGSIb3DQEJARYMdGVzdEB0ZXN0LnJ1MRYwFAYFKoUDZAMSCzIyMjIyMjIyMjIyMRgwFgYFKoUDZAESDTExMTc3NDY3NTM4NzExGzAZBgNVBAwMEtCU0L7Qu9C20L3QvtGB0YLRjDEjMCEGA1UECwwa0J/QvtC00YDQsNC30LTQtdC70LXQvdC40LUxLzAtBgNVBAoMJtCe0J7QniAi0J3Qn9CeICLQmtGA0LjRgdGC0LAiINGC0LXRgdGCMSkwJwYDVQQJDCAxLdGPINCS0YvQsdC+0YDQs9GB0LrQsNGPINC0LiA1MDEXMBUGA1UEBwwO0KDRi9Cx0LjQvdGB0LoxMTAvBgNVBAgMKDc2INCv0YDQvtGB0LvQsNCy0YHQutCw0Y8g0L7QsdC70LDRgdGC0YwxCzAJBgNVBAYTAlJVMSAwHgYDVQQqDBfQmNC80Y8g0J7RgtGH0LXRgdGC0LLQvjEXMBUGA1UEBAwO0KTQsNC80LjQu9C40Y8xLzAtBgNVBAMMJtCe0J7QniAi0J3Qn9CeICLQmtGA0LjRgdGC0LAiINGC0LXRgdGCMGYwHwYIKoUDBwEBAQEwEwYHKoUDAgIkAAYIKoUDBwEBAgIDQwAEQCc2DeOrUtOL93fZljHIIZhUMUX+xCao6RKstk2mgvGEQHEM+V0kZLnQqUeZ2VAZdIy1p1LynwOvrMkmnUybdW6jggH4MIIB9DAOBgNVHQ8BAf8EBAMCA+gwHQYDVR0OBBYEFGfRd7zixOIBtVm/OHhPrXUtMKxtMDQGCSsGAQQBgjcVBwQnMCUGHSqFAwICMgEJg934XYaqkVCE4ZU0h8qsFYOVEZI4AgEBAgEAMIGrBgNVHSUEgaMwgaAGCCsGAQUFBwMCBggrBgEFBQcDBAYJKoUDA4ICAQMWBgkqhQMDggIBAxIGCSqFAwOCAgEDFQYJKoUDA4ICAQMUBgkqhQMDggIBAxAGCSqFAwOCAgEDDgYJKoUDA4ICAQMRBgkqhQMDggIBAw8GCSqFAwOCAgEDFwYJKoUDA4ICAQMKBgkqhQMDggIBAwQGByqFAwICIgYGCCsGAQUFBwMDMAwGBSqFA2RyBAMCAQAwgdAGA1UdIwSByDCBxYAUtJH9cXDYMaFkS19rxKfhF+6BBZGhgZmkgZYwgZMxGDAWBgUqhQNkARINMDAwMDAwMDAwMDAwMDEaMBgGCCqFAwOBAwEBEgwwMDAwMDAwMDAwMDAxCzAJBgNVBAYTAlJVMQ8wDQYDVQQIDAY3NiBZYXIxEDAOBgNVBAcMB1J5Ymluc2sxCzAJBgNVBAsMAkNBMQ8wDQYDVQQKDAZrcmlzdGExDTALBgNVBAMMBHJvb3SCEQHbGB0BF65TlEhp8YwuJHx5MAoGCCqFAwcBAQMCA0EANu1jHr4uH17K+EACOrvzkiVWsBe58sthxgFKmMrMwWjjXggWtQXuZmAA/mP2jQo8gD60xUFe5GRzbPaetajWsQ==";
  const String kristaParameters =
      "eyJ2YWxpZEZyb21EYXRlIjoiMjAyMi0wNy0yNSAwODoyNDo1MC4wMDBaIiwidmFsaWRUb0RhdGUiOiIyMDIzLTA3LTI1IDA4OjM0OjUwLjAwMFoiLCJpc3N1ZXIiOiJbMSwgMiwgNjQzLCAxMDAsIDFdPTAwMDAwMDAwMDAwMDAsIFsxLCAyLCA2NDMsIDMsIDEzMSwgMSwgMV09MDAwMDAwMDAwMDAwLCBjb3VudHJ5TmFtZT1SVSwgc3RhdGVPclByb3ZpbmNlTmFtZT03NiBZYXIsIGxvY2FsaXR5TmFtZT1SeWJpbnNrLCBvcmdhbml6YXRpb25Vbml0TmFtZT1DQSwgb3JnYW5pemF0aW9uTmFtZT1rcmlzdGEsIGNvbW1vbk5hbWU9cm9vdCIsInN1YmplY3QiOiJbMSwgMiwgNjQzLCAxMDAsIDRdPTQ2ODk1NzY4MTIsIGVtYWlsQWRkcmVzcz10ZXN0QHRlc3QucnUsIFsxLCAyLCA2NDMsIDEwMCwgM109MjIyMjIyMjIyMjIsIFsxLCAyLCA2NDMsIDEwMCwgMV09MTExNzc0Njc1Mzg3MSwgdGl0bGU90JTQvtC70LbQvdC+0YHRgtGMLCBvcmdhbml6YXRpb25Vbml0TmFtZT3Qn9C+0LTRgNCw0LfQtNC10LvQtdC90LjQtSwgb3JnYW5pemF0aW9uTmFtZT3QntCe0J4gXCLQndCf0J4gXCLQmtGA0LjRgdGC0LBcIiDRgtC10YHRgiwgbnVsbD0xLdGPINCS0YvQsdC+0YDQs9GB0LrQsNGPINC0LiA1MCwgbG9jYWxpdHlOYW1lPdCg0YvQsdC40L3RgdC6LCBzdGF0ZU9yUHJvdmluY2VOYW1lPTc2INCv0YDQvtGB0LvQsNCy0YHQutCw0Y8g0L7QsdC70LDRgdGC0YwsIGNvdW50cnlOYW1lPVJVLCBnaXZlbk5hbWU90JjQvNGPINCe0YLRh9C10YHRgtCy0L4sIHN1cm5hbWU90KTQsNC80LjQu9C40Y8sIGNvbW1vbk5hbWU90J7QntCeIFwi0J3Qn9CeIFwi0JrRgNC40YHRgtCwXCIg0YLQtdGB0YIiLCJzdWJqZWN0SW5mbyI6IlsxLCAyLCA2NDMsIDEwMCwgNF09NDY4OTU3NjgxMiwgZW1haWxBZGRyZXNzPXRlc3RAdGVzdC5ydSwgWzEsIDIsIDY0MywgMTAwLCAzXT0yMjIyMjIyMjIyMiwgWzEsIDIsIDY0MywgMTAwLCAxXT0xMTE3NzQ2NzUzODcxLCB0aXRsZT3QlNC+0LvQttC90L7RgdGC0YwsIG9yZ2FuaXphdGlvblVuaXROYW1lPdCf0L7QtNGA0LDQt9C00LXQu9C10L3QuNC1LCBvcmdhbml6YXRpb25OYW1lPdCe0J7QniBcItCd0J/QniBcItCa0YDQuNGB0YLQsFwiINGC0LXRgdGCLCBudWxsPTEt0Y8g0JLRi9Cx0L7RgNCz0YHQutCw0Y8g0LQuIDUwLCBsb2NhbGl0eU5hbWU90KDRi9Cx0LjQvdGB0LosIHN0YXRlT3JQcm92aW5jZU5hbWU9NzYg0K/RgNC+0YHQu9Cw0LLRgdC60LDRjyDQvtCx0LvQsNGB0YLRjCwgY291bnRyeU5hbWU9UlUsIGdpdmVuTmFtZT3QmNC80Y8g0J7RgtGH0LXRgdGC0LLQviwgc3VybmFtZT3QpNCw0LzQuNC70LjRjywgY29tbW9uTmFtZT3QntCe0J4gXCLQndCf0J4gXCLQmtGA0LjRgdGC0LBcIiDRgtC10YHRgiIsImlzc3VlckluZm8iOiJbMSwgMiwgNjQzLCAxMDAsIDFdPTAwMDAwMDAwMDAwMDAsIFsxLCAyLCA2NDMsIDMsIDEzMSwgMSwgMV09MDAwMDAwMDAwMDAwLCBjb3VudHJ5TmFtZT1SVSwgc3RhdGVPclByb3ZpbmNlTmFtZT03NiBZYXIsIGxvY2FsaXR5TmFtZT1SeWJpbnNrLCBvcmdhbml6YXRpb25Vbml0TmFtZT1DQSwgb3JnYW5pemF0aW9uTmFtZT1rcmlzdGEsIGNvbW1vbk5hbWU9cm9vdCIsInNlcmlhbE51bWJlciI6IjAxM2E2NzhkMDBkZGFlN2NiZDRjNDAwM2M5OTRkMzJlMzYiLCJzaWduQWxnb3JpdG1bbmFtZV0iOiLQk9Ce0KHQoiDQoCAzNC4xMC0yMDEyIiwic2lnbkFsZ29yaXRtW29pZF0iOiIxLjIuNjQzLjcuMS4xLjMuMiIsImhhc2hBbGdvcml0bVthbGlhc10iOiIxLjIuNjQzLjcuMS4xLjIuMiJ9";
  const String kristaDescription =
      "0JLQu9Cw0LTQtdC70LXRhjogWzEsIDIsIDY0MywgMTAwLCA0XT00Njg5NTc2ODEyLCBlbWFpbEFkZHJlc3M9dGVzdEB0ZXN0LnJ1LCBbMSwgMiwgNjQzLCAxMDAsIDNdPTIyMjIyMjIyMjIyLCBbMSwgMiwgNjQzLCAxMDAsIDFdPTExMTc3NDY3NTM4NzEsIHRpdGxlPdCU0L7Qu9C20L3QvtGB0YLRjCwgb3JnYW5pemF0aW9uVW5pdE5hbWU90J/QvtC00YDQsNC30LTQtdC70LXQvdC40LUsIG9yZ2FuaXphdGlvbk5hbWU90J7QntCeICLQndCf0J4gItCa0YDQuNGB0YLQsCIg0YLQtdGB0YIsIG51bGw9MS3RjyDQktGL0LHQvtGA0LPRgdC60LDRjyDQtC4gNTAsIGxvY2FsaXR5TmFtZT3QoNGL0LHQuNC90YHQuiwgc3RhdGVPclByb3ZpbmNlTmFtZT03NiDQr9GA0L7RgdC70LDQstGB0LrQsNGPINC+0LHQu9Cw0YHRgtGMLCBjb3VudHJ5TmFtZT1SVSwgZ2l2ZW5OYW1lPdCY0LzRjyDQntGC0YfQtdGB0YLQstC+LCBzdXJuYW1lPdCk0LDQvNC40LvQuNGPLCBjb21tb25OYW1lPdCe0J7QniAi0J3Qn9CeICLQmtGA0LjRgdGC0LAiINGC0LXRgdGCCtCh0LXRgNC40LnQvdGL0Lkg0L3QvtC80LXRgDogMDEzYTY3OGQwMGRkYWU3Y2JkNGM0MDAzYzk5NGQzMmUzNgrQmNC30LTQsNGC0LXQu9GMOiBbMSwgMiwgNjQzLCAxMDAsIDFdPTAwMDAwMDAwMDAwMDAsIFsxLCAyLCA2NDMsIDMsIDEzMSwgMSwgMV09MDAwMDAwMDAwMDAwLCBjb3VudHJ5TmFtZT1SVSwgc3RhdGVPclByb3ZpbmNlTmFtZT03NiBZYXIsIGxvY2FsaXR5TmFtZT1SeWJpbnNrLCBvcmdhbml6YXRpb25Vbml0TmFtZT1DQSwgb3JnYW5pemF0aW9uTmFtZT1rcmlzdGEsIGNvbW1vbk5hbWU9cm9vdArQkNC70LPQvtGA0LjRgtC8INC/0L7QtNC/0LjRgdC4OtCT0J7QodCiINCgIDM0LjEwLTIwMTIK0JTQtdC50YHRgtCy0YPQtdGCINGBOiAyMDIyLTA3LTI1IDA4OjI0OjUwLjAwMFoK0JTQtdC50YHRgtCy0YPQtdGCINC/0L46IDIwMjMtMDctMjUgMDg6MzQ6NTAuMDAwWg==";

  group('Тестирование класса Certificate.', () {
    test('Из base64. Сертификат КриптоПРО УЦ', () {
      Certificate certificate = Certificate.fromBase64({"alias": cryptoProAlias, "certificate": cryptoProRawCertificate});

      expect(certificate.algorithm, Algorithm.findAlgorithmByPublicKeyOID("1.2.643.7.1.1.1.1"));
      expect(certificate.certificate, cryptoProRawCertificate);
      expect(certificate.notAfterDate, "10:57 21-03-2023");
      expect(certificate.serialNumber, "120060c2d79261fba6e855977c00010060c2d7");
      expect(certificate.subjectDN.contains("email"), true);
      expect(base64.encode(utf8.encode(json.encode(certificate.parameterMap))), cryptoProParameters);
      expect(base64.encode(utf8.encode(certificate.certificateDescription)), cryptoProDescription);
    });

    test('Из base64. Сертификат Криста УЦ', () {
      Certificate certificate = Certificate.fromBase64({"alias": kristaCertificateAlias, "certificate": kristaRawCertificate});

      expect(certificate.algorithm, Algorithm.findAlgorithmByPublicKeyOID("1.2.643.7.1.1.1.1"));
      expect(certificate.certificate, kristaRawCertificate);
      expect(certificate.notAfterDate, "08:34 25-07-2023");
      expect(certificate.serialNumber, "013a678d00ddae7cbd4c4003c994d32e36");
      expect(certificate.subjectDN.contains("Рыбинск"), true);
      expect(certificate.subjectDN.contains("22222222222"), true);
      expect(base64.encode(utf8.encode(json.encode(certificate.parameterMap))), kristaParameters);
      expect(base64.encode(utf8.encode(certificate.certificateDescription)), kristaDescription);
    });

    test('Из/в JSON', () {
      Certificate kristaCertificate = Certificate.fromBase64({"alias": kristaCertificateAlias, "certificate": kristaRawCertificate});
      Certificate cryptoProCertificate = Certificate.fromBase64({"alias": cryptoProAlias, "certificate": cryptoProRawCertificate});

      String kristaJSON = json.encode(kristaCertificate.toJson());
      String cryptoProJSON = json.encode(cryptoProCertificate.toJson());

      Certificate kristaCertificateFromJSON = Certificate.fromJson(json.decode(kristaJSON) as Map<String, dynamic>);
      Certificate cryptoPROCertificateFromJSON = Certificate.fromJson(json.decode(cryptoProJSON) as Map<String, dynamic>);

      expect(kristaCertificate, kristaCertificateFromJSON);
      expect(cryptoProCertificate, cryptoPROCertificateFromJSON);
      expect(kristaJSON, json.encode(kristaCertificateFromJSON.toJson()));
      expect(cryptoProJSON, json.encode(cryptoPROCertificateFromJSON.toJson()));
    });

    test('Добавление ведущих нулей при преобразовании серийного номера в hex', () {
      String serialNumber1 = Certificate.parseSerialNumberToHex(BigInt.parse("548226392223302168094978710813409480160"));
      String serialNumber2 = Certificate.parseSerialNumberToHex(BigInt.parse("162531608789284853759428856571333747351"));
      String serialNumber3 = Certificate.parseSerialNumberToHex(BigInt.parse("7128820800948151058522410848446416797"));
      String serialNumber4 = Certificate.parseSerialNumberToHex(BigInt.parse("1132170373875453231367375"));

      expect(serialNumber1, "019c70900090af7ebc42a6d54638d30de0");
      expect(serialNumber2, "7a46730095adb3bb4fd76b47428ca297");
      expect(serialNumber3, "055cf6007bad0e9541c76d62897d879d");
      expect(serialNumber4, "00efbf14360000000004cf");
    });
  });
}
