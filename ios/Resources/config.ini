[Random]
# Датчики случайных чисел
# Bio - Биологический датчик
# Dsrf - Датчик ДСРФ
# Sable - Датчик Соболь
[Random\Dsrf]
"DLL"="dummy.so"
[Random\CPSD]
"DLL"="dummy.so"


[Random\CPSD\Default]
Name = "CPSD RNG"
Level = 3

[Random\Bio_gui]
DLL = "dummy.so"

[Random\BIO_GUI\Default]
Name = "rndm GUI"
Level = 2

[KeyDevices]
[KeyDevices\HDimage]
"DLL"="dummy.so"

[KeyDevices\HDIMAGE\Default]
Name = "HDIMAGE"

[KeyDevices\PCSC]
DLL = "dummy.so"
Group = 1

[KeyDevices\PCSC\"PNP PCSC"\Default]
Name = "All PC/SC readers"


[KeyCarriers]

[KeyCarriers\OSCAR]
DLL = "dummy.so"

[KeyCarriers\OSCAR\Default]
atr = hex: 00,00,00,00,00,00,00,43,52,59,50,54,4f,50,52
mask = hex: 00,00,00,00,00,00,00,ff,ff,ff,ff,ff,ff,ff,ff
folders = "0B00"

[KeyCarriers\OSCAR2]
DLL = "dummy.so"

[KeyCarriers\OSCAR2\Default]
Name = "\xce\xf1\xea\xe0\xf0 CSP 2.0"
atr = hex: 00,00,00,00,00,00,00,43,50,43,53,50,01,01,02
mask = hex: 00,00,00,00,00,00,00,ff,ff,ff,ff,ff,ff,ff,ff
folders = "0B00"
size_1 = 60
size_2 = 70
size_4 = 60
size_5 = 70
size_6 = 62

[KeyCarriers\OSCAR2\KChannel]
Name = "Channel K"
atr = hex: 00,00,00,00,00,00,00,43,50,43,53,50,01,01,01
mask = hex: 00,00,00,00,00,00,00,ff,ff,ff,ff,ff,ff,ff,ff
folders = "0B00"
size_1 = 56
size_2 = 36
size_4 = 56
size_5 = 36
size_6 = 62

[KeyCarriers\TRUST]
DLL = "dummy.so"

[KeyCarriers\TRUST\Default]
atr = hex: 3b,9e,00,00,80,31,c0,65,4d,47,00,00,00,72,f7,41,81,07
mask = hex: ff,ff,00,00,ff,ff,ff,ff,ff,ff,30,00,00,ff,ff,ff,ff,ff
folders = "A\\B\\C\\D\\E\\F\\G\\H"

[KeyCarriers\TRUSTS]
DLL = "dummy.so"

[KeyCarriers\TRUSTS\Default]
Name = "Foros SocCard"
atr = hex: 3b,9a,00,00,80,31,c0,61,00,72,f7,41,81,07
mask = hex: ff,ff,00,00,ff,ff,ff,ff,30,ff,ff,ff,ff,ff
folders = "A\\B\\C\\D"

[KeyCarriers\TRUSTD]
DLL = "dummy.so"

[KeyCarriers\TRUSTD\Default]
atr = hex: 3b,98,00,00,80,31,c0,72,f7,41,81,07
mask = hex: ff,ff,00,00,ff,ff,ff,ff,ff,ff,ff,ff
folders = "A\\B\\C\\D\\E\\F\\G\\H"

[KeyCarriers\GEMALTO]
DLL="dummy.so"

[KeyCarriers\GEMALTO\Default]
atr = hex: 3b,7a,94,00,00,80,65,a2,01,01,01,3d,72,d6,43
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff
folders = "SLOT#01\\SLOT#02\\SLOT#03\\SLOT#04\\SLOT#05\\SLOT#06"

[KeyCarriers\GEMALTO\GemSIM1]
mask = hex:ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff
folders = "SLOT#01\\SLOT#02\\SLOT#03\\SLOT#04\\SLOT#05\\SLOT#06"
atr = hex:3b,2a,00,80,65,a2,01,02,01,31,72,d6,43

[KeyCarriers\GEMALTO\GemSIM2]
mask = hex:ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff
folders = "SLOT#01\\SLOT#02\\SLOT#03\\SLOT#04\\SLOT#05\\SLOT#06"
atr = hex:3b,7a,96,00,00,80,65,a2,01,01,01,3d,72,d6,43

[KeyCarriers\GEMALTO\Native]
atr = hex:3b,2a,00,80,65,a2,01,01,01,3d,72,d6,43
mask = hex:ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff
folders = "SLOT#01\\SLOT#02\\SLOT#03\\SLOT#04\\SLOT#05\\SLOT#06"

[KeyCarriers\GEMALTO\Optelio]
atr = hex:3b,6a,00,00,80,65,a2,01,01,01,3d,72,d6,43
mask = hex:ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff
folders = "SLOT#01\\SLOT#02\\SLOT#03\\SLOT#04\\SLOT#05\\SLOT#06"

[KeyCarriers\GEMALTO\OptelioNDef]
atr = hex: 3b,6e,00,00,80,31,80,66,b0,00,00,00,00,00,83,00,90,00
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,f0,00,00,00,00,00,ff,ff,ff,ff
folders = "SLOT#01\\SLOT#02\\SLOT#03\\SLOT#04\\SLOT#05\\SLOT#06"

[KeyCarriers\gemfkc]
DLL = "librdrcpfkc.so"
                    
[KeyCarriers\gemfkc\Default]
atr = hex: 3b,7f,96,00,00,00,31,b8,77,61,72,6d,5f,72,65,73,65,74,90,00
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff
Name = "Gemalto FKC"

[KeyCarriers\rutokenfkc_nfc]
DLL="dummy.so"

[KeyCarriers\rutokenfkc_nfc\Default]
Name = "Rutoken ECP 3.0 NFC"
atr = hex: 3b,9c,97,80,11,40,52,75,74,6f,6b,65,6e,45,43,50,73,63,c0
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff

[KeyCarriers\smartparkfkc]
DLL="dummy.so"

[KeyCarriers\smartparkfkc\Default]
Name = "SmartPark FKC"
atr = hex: 3b,00,00,00,53,4d,41,52,54,50,41,52,4b,20,46,4b,43
mask = hex: ff,00,00,00,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff

[KeyCarriers\INPASPOT]
DLL="dummy.so"

[KeyCarriers\INPASPOT\SCOneSeries]
Name = "ALIOTH, SCOne Series"
atr = hex: 3b,6d,00,00,80,31,80,65,49,53,00,00,01,83,07,90,00
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,00,00,ff,ff,ff,ff,ff

[KeyCarriers\INPASPOT\SCOneD80]
Name = "ALIOTH, SCOne D80"
atr = hex: 3b,fd,13,00,00,10,00,80,31,80,65,49,53,00,00,01,83,07,90,00
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,00,00,ff,ff,ff,ff,ff

[KeyCarriers\INPASPOT\SCOneV3]
Name = "ALIOTH, SCOne V3"
atr = hex: 3b,69,00,ff,4a,43,4f,50,32,34,32,52,32
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff

[KeyCarriers\INPASPOT\J3H081]
Name = "ALIOTH, SCOne J3H081"
atr = hex: 3b,6a,00,ff,00,31,c1,73,c8,40,00,00,90,00
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff

[KeyCarriers\INPASPOT\Default]
Name = "ALIOTH, Ubivelox"
atr = hex: 3b,68,00,00,00,73,c8,40,00,00,90,00
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff

[KeyCarriers\INPASPOT1]
DLL="dummy.so"

[KeyCarriers\INPASPOT1\Default]
Name = "Inpaspot"
atr = hex: 3b,fd,13,00,00,10,80,80,31,80,65,b0,83,11,00,ac,83,00,90,00
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff

[KeyCarriers\INPASPOT2]
DLL="dummy.so"

[KeyCarriers\INPASPOT2\Default]
Name = "Inpaspot"
atr = hex: 3b,fa,13,00,00,10,80,80,31,80,66,b0,84,0c,01,6e,01
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff

[KeyCarriers\MORPHOKST]
DLL="dummy.so"

[KeyCarriers\MORPHOKST\Default]
Name = "MorphoKST"
atr = hex: 3b,68,00,00,00,73,c8,40,00,00,90,00
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff

[KeyCarriers\MSKEY]
DLL="dummy.so"

[KeyCarriers\MSKEY\Default]
Name = "Multisoft MSKey"
atr = hex: 3b,9e,00,00,80,31,c0,65,4d,53,00,00,00,72,f7,41,81,07
mask = hex: ff,ff,00,00,ff,ff,ff,ff,ff,ff,30,00,00,ff,ff,ff,ff,ff

[KeyCarriers\NOVACARD]
DLL="dummy.so"

[KeyCarriers\NOVACARD\Default]
Name = "Novacard"
atr = hex: 3b,6f,00,00,00,31,c0,68,43,53,50,45,4d,56,03,00,00,90,00
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,00,ff,ff
folders = "0B00\\0B10"

[KeyCarriers\NOVACARD\CF58]
atr = hex: 3b,6b,00,00,00,31,c0,64,08,44,03,00,00,90,00
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,00,00,ff,ff
folders = "0B00\\0B10"

[KeyCarriers\NOVACARD\CF60]
atr = hex: 3b,6b,00,00,00,31,c1,64,08,60,32,00,00,90,00
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,00,00,ff,ff
folders = "0B00\\0B10"

[KeyCarriers\ROSAN]
DLL="dummy.so"

[KeyCarriers\ROSAN\Default]
atr = hex: 3b,68,00,00,00,73,c8,40,00,00,90,00
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,00,ff,ff,ff
folders = "D01\\D02\\D03\\D04\\D05"

[KeyCarriers\ROSAN\Rosan_GD]
atr = hex: 3b,ff,97,00,00,80,31,fe,45,00,31,c1,73,c8,21,10,64,00,00,00,00, \
  00,90,00,00
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,00,00,00, \
  00,ff,ff,ff,00
folders = "D01\\D02\\D03\\D04\\D05"

[KeyCarriers\ROSAN\Rosan_GD1]
atr = hex: 3b,fd,97,00,00,80,31,fe,45,00,31,c0,71,c6,64,4d,35,00,00,01,90, \
  00,00
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,00,00,ff, \
  ff,ff,00
folders = "D01\\D02\\D03\\D04\\D05"

[KeyCarriers\ROSAN\Rosan_GD2]
atr = hex: 3b,e8,00,00,81,31,fe,45,00,73,c8,40,13,00,90,00,9b
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff
folders = "D01\\D02\\D03\\D04\\D05"

[KeyCarriers\ROSAN\Rosan_GD3]
atr = hex: 3b,6d,00,00,00,73,c8,00,13,64,54,00,00,00,00,90,00
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,00,00,00,ff,ff,ff
folders = "D01\\D02\\D03\\D04\\D05"

[KeyCarriers\ROSAN\Rosan_GD4]
atr = hex: 3b,7e,96,00,00,00,31,c0,71,c6,65,74,0b,04,16,31,01,90,00
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff
folders = "D01\\D02\\D03\\D04\\D05"

[KeyCarriers\ROSAN\NXP_JCOP4]
atr = hex: 3b,d4,95,ff,81,31,fe,45,00,00,00,00,90
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,00,00,00,00,f0
folders = "D01\\D02\\D03\\D04\\D05"

[KeyCarriers\ROSAN\Kona2]
atr = hex: 3b,f8,13,00,00,10,00,00,73,c8,40,00,00,90,00
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,00,ff,ff,ff
folders = "D01\\D02\\D03\\D04\\D05"

[KeyCarriers\RutokenECP]
DLL="dummy.so"

[KeyCarriers\RutokenECP\Default]
Name = "Rutoken ECP"
atr = hex: 3b,8b,01,52,75,74,6f,6b,65,6e,20,44,53,20,c1
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff
folders = "0A00\\0B00\\0C00\\0D00\\0E00\\0F00\\1000\\1100\\1200\\1300"
size_1 = 60
size_2 = 70
size_3 = 3072
size_4 = 60
size_5 = 70
size_6 = 300
size_7 = 8

[KeyCarriers\RutokenECP\BT]
Name = "Rutoken ECP BT"
atr = hex: 3b,8b,01,52,75,74,6f,6b,65,6e,44,53,42,54,d7
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff
folders = "0A00\\0B00\\0C00\\0D00\\0E00\\0F00\\1000\\1100\\1200\\1300"
size_1 = 60
size_2 = 70
size_3 = 3072
size_4 = 60
size_5 = 70
size_6 = 300
size_7 = 8

[KeyCarriers\RutokenECPSC]
DLL="dummy.so"

[KeyCarriers\RutokenECPSC\Default]
Name = "Rutoken ECP SC"
atr = hex: 3b,9c,96,00,52,75,74,6f,6b,65,6e,45,43,50,73,63
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff
folders = "0A00\\0B00\\0C00\\0D00\\0E00\\0F00\\1000\\1100\\1200\\1300"
size_1 = 60
size_2 = 70
size_3 = 8
size_4 = 60
size_5 = 70
size_6 = 300
size_7 = 8

[KeyCarriers\RutokenLiteSC2]
DLL="dummy.so"

[KeyCarriers\RutokenLiteSC2\Default]
Name = "Rutoken Lite SC"
atr = hex: 3b,9e,96,00,52,75,74,6f,6b,65,6e,4c,69,74,65,53,43,32
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff
folders = "0A00\\0B00\\0C00\\0D00\\0E00\\0F00\\1000\\1100\\1200\\1300"
size_1 = 60
size_2 = 70
size_3 = 8
size_4 = 60
size_5 = 70
size_6 = 300
size_7 = 8

[KeyCarriers\RutokenECPMSC]
DLL="dummy.so"

[KeyCarriers\RutokenECPMSC\Default]
Name = "Rutoken ECP 2151 SC"
atr = hex: 3b,1a,96,72,75,74,6f,6b,65,6e,6d,73,63
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff
folders = "0A00\\0B00\\0C00\\0D00\\0E00\\0F00\\1000\\1100\\1200\\1300"
size_1 = 60
size_2 = 70
size_3 = 3072
size_4 = 60
size_5 = 70
size_6 = 300
size_7 = 8

[KeyCarriers\JaCarta]
DLL = "dummy.so"

[KeyCarriers\JaCarta\Default]
Name = "Aladdin R.D. JaCarta"
atr = hex: 3b,dc,18,ff,81,91,fe,1f,c3,80,73,c8,21,13,66,01,06,11,59,00,01, \
  28
mask = hex: ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff,ff, \
  ff,ff
folders = "CC00\\CC01\\CC02\\CC03\\CC04\\CC05\\CC06\\CC07\\CC08\\CC09"

[Capilite]
# Исправлять переданные в CryptoAPI неверные алгоритмы
repair_bad_algs=1
# Максимальное время в микросекундах, в течение которого разные версии файла
# на диске могут получить одну метку времени. CertControlStore при
# синхронизации хранилищ использует это значение для оптимизации.
# Значение 2000000000 отключает оптимизацию.
worst_store_resync_period=3000000

[Capilite\cache_settings]
# Параметры CryptRetriveObjectByURL
max_elements=100

[Capilite\Stores]
# Настройки отдельных хранилищ в формате битовой карты.
# Отсутствие переменной или 0 - хранилище в Current User (CU) состоит из
# физических хранилищ в CU и Local Machine (LM).
# 1 - хранилище в CU состоит только из физического хранилища в LM. Этот флаг
# имеет приоритет над флагом 2.
# 2 - хранилище в CU состоит только из физического хранилища в CU.
# 4 - при открытии физического хранилища с любыми флагами форсируется его
# создание.
[Capilite\Stores\My]
settings=6
[Capilite\Stores\Request]
settings=6
[Capilite\Stores\Cache]
settings=6

[Capilite\Stores\Root]
settings=4
[Capilite\Stores\Trust]
settings=4
[Capilite\Stores\CA]
settings=4
[Capilite\Stores\CryptoProTrustedStore]
settings=4

[Parameters]
# Параметры провайдера
DisableIntegrity=false

# Настройки TLS
tls_server_use_renegotiation_info_extension = 1

# Период работы тестера
#TesterPeriod=10
TesterPeriod=600
PKZI_Build=12000
Release="5.0.0.0.12000"
DisableShortcuts=true
# Использование сигналов curl'ом
CurlUseSignals=false

#EnableDTBSDisplay = 0
# EnableDTBSDisplay = 1 включает поддержку средств подтверждения подписи.

#ForceDTBSDisplay = 0
# ForceDTBSDisplay = 1 требует обязательного использования устройств
# подтверждения подписи.

ForceMicrosoftCRLMatching = 1
# ForceMicrosoftCRLMatching = 1 форсирует строгий алгоритм сопоставления CRL с
# сертификатом издателя

[Parameters\"Crypto-Pro RSA Cryptographic Service Provider"]
KeyTimeValidityControlMode = 128

[Parameters\"Crypto-Pro ECDSA and AES CSP"]
KeyTimeValidityControlMode = 128

[Parameters\"Crypto-Pro Enhanced RSA and AES CSP"]
KeyTimeValidityControlMode = 128

[Parameters\"Crypto-Pro Curve25519 and AES CSP"]
KeyTimeValidityControlMode = 128

[Parameters\PasswordPolicies]
# regexp, матчит все видимые ascii-символы.
AsciiPasswordPolicy = "[ [:punct:][:digit:]ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz]*"

[Provider]
# Шаблоны провайдеров по типам носителей

# Проверка алгебраических свойств открытого ключа
CheckPublic = true

[apppath]
"dummy.so" = "dummy.so"
"librdrrndm.so" = "dummy.so"
"librdrrdr.so" = "dummy.so"
"libcsp.so" = "dummy.so"
"librdrrutoken.so" = "dummy.so"

# Пути к библиотекам

[Services]
# Службы и их параметры.
# Параметр "StartService" указывает имя исполняемого файла службы 
# (в каталоге @ac_default_prefix@/sbin)
# Остальные параметры зависят от службы
# Секции сервисов:
#   HSMServer - Служба Феникс-М
#   HSMClient - Служба поддержки канала "К" (клиент Феникс-М)
#   CryptSrvKB2 - Служба провайдера KB2
#   CryptSrvKC2 - Служба провайдера KC2

[Defaults\Provider]
# Провайдеры. Описание провайдера должно содержать поля:
# "Image Path" = путь до разделяемой библиотеки провайдера
# "Type"= тип провайдера (71, 75)


[Defaults\Provider\"Crypto-Pro GOST R 34.10-2001 KC1 CSP"]
"Image Path" = "dummy.so"
"Function Table Name" = "CPCSP_GetFunctionTable"
Type = 75

[Defaults\Provider\"Crypto-Pro GOST R 34.10-2012 KC1 CSP"]
"Image Path" = "dummy.so"
"Function Table Name" = "CPCSP_GetFunctionTable"
Type = 80

[Defaults\Provider\"Crypto-Pro GOST R 34.10-2012 KC1 Strong CSP"]
"Image Path" = "dummy.so"
"Function Table Name" = "CPCSP_GetFunctionTable"
Type = 81

[Defaults\Provider\"Crypto-Pro RSA Cryptographic Service Provider"]
"Image Path" = "dummy.so"
"Function Table Name" = "CPCSP_GetFunctionTable"
Type = 1

[Defaults\Provider\"Crypto-Pro ECDSA and AES CSP"]
"Image Path" = "dummy.so"
"Function Table Name" = "CPCSP_GetFunctionTable"
Type = 16

[Defaults\Provider\"Crypto-Pro Enhanced RSA and AES CSP"]
"Image Path" = "dummy.so"
"Function Table Name" = "CPCSP_GetFunctionTable"
Type = 24

[Defaults\Provider\"Crypto-Pro Curve25519 and AES CSP"]
"Image Path" = "dummy.so"
"Function Table Name" = "CPCSP_GetFunctionTable"
Type = 32

[Defaults\Provider\"Crypto-Pro GOST R 34.10-2001 FKC CSP"]
"Image Path" = "dummy.so"
"Function Table Name" = "CPFKC_GetFunctionTable"
"Base Function Table Name" = "CPCSP_GetFunctionTable"
Type = 75
"Base CP Module Name" = "dummy.so"

[Defaults\"Provider Types"]
# Типы провайдеров. Описание типа провайдера должно содержать поля:
# "Name"= имя провайдера по умолчанию для данного типа
# "TypeName" = имя типа провайдера

[Defaults\"Provider Types"\"Type 075"]
Name = "Crypto-Pro GOST R 34.10-2001 KC1 CSP"
TypeName = "GOST R 34.10-2001 Signature with Diffie-Hellman Key Exchange"

[Defaults\"Provider Types"\"Type 080"]
Name = "Crypto-Pro GOST R 34.10-2012 KC1 CSP"
TypeName = "GOST R 34.10-2012 (256) Signature with Diffie-Hellman Key Exchange"

[Defaults\"Provider Types"\"Type 081"]
Name = "Crypto-Pro GOST R 34.10-2012 KC1 Strong CSP"
TypeName = "GOST R 34.10-2012 (512) Signature with Diffie-Hellman Key Exchange"

[Defaults\"Provider Types"\"Type 001"]
Name = "Crypto-Pro RSA Cryptographic Service Provider"
TypeName = "RSA Full (Signature and Key Exchange)"

[Defaults\"Provider Types"\"Type 016"]
Name = "Crypto-Pro ECDSA and AES CSP"
TypeName = "ECDSA Full and AES"

[Defaults\"Provider Types"\"Type 024"]
Name = "Crypto-Pro Enhanced RSA and AES CSP"
TypeName = "RSA Full and AES"

[Defaults\"Provider Types"\"Type 032"]
Name = "Crypto-Pro Curve25519 and AES CSP"
TypeName = "Curve25519 Full and AES"

["dummy section comment for debug"]
# Фильтр отладочных сообщений в формате "Имя модуля"=битовая маска
# Флаги фильтрации (mofname=x):
# Потери производительности  [нет auth.* в syslog.conf] [есть auth.*]
#    N_DB_ERROR = 1             0%                      0%
#    N_DB_TRACE = 2             77%                     98%
#    N_DB_CALL = 4              70%                     98%
#    N_DB_LOG = 8               1%                      30%
# Флаги формата (modname_fmt=x):
#    module 1
#    thread 2
#    file_and_line 4
#    function 8
#    text 16
#    hex 32
#    error 64

[debug]

csp=4096
csp_fmt=127
capi10=4096
capi10_fmt=127
cpext=4096
cpext_fmt=127
capi20=4096
capi20_fmt=127
ssp=4096
ssp_fmt=95
cppkcs11=4096
cppkcs11_fmt=127
ocsp=4096
ocsp_fmt=57
tsp=4096
tsp_fmt=57
cades=4096
cades_fmt=57
pkivalidator=4096
pkivalidator_fmt=57
pcsc=0
pcsc_fmt=57

[OID]
# Идентификаторы алгоритмов. Описание идентификатора должно содержать поля:
# "Name"= имя идентификатора
# "Algid"= номер идентификатора (ALG_ID) (опционально)
# "ExtraInfo"= бинарный блок доп. информации (опционально)
# "Flags"= отсутствует или 0 - запись регистрируется после стандартных,
# 1 - перед ними (опционально)

[policy\OIDs]
"{A4CC781E-04E9-425C-AAFD-1D74DA8DFAF6}" = "libpkivalidator.so OCSPSigni" \
  "ngImpl"
"{AF74EE92-A059-492F-9B4B-EAD239B22A1B}" = "libpkivalidator.so Timestamp" \
  "SigningImpl"
"{B52FF66F-13A5-402C-B958-A3A6B5300FB6}" = "libpkivalidator.so Signature" \
  "Impl"
5 = "libpkivalidator.so BasicConstraintsImpl"
